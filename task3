import requests

class StockPortfolio:
    def __init__(self, api_key):
        self.api_key = api_key
        self.portfolio = {}

    def add_stock(self, symbol, shares):
        if symbol in self.portfolio:
            self.portfolio[symbol] += shares
        else:
            self.portfolio[symbol] = shares
        print(f"Added {shares} shares of {symbol} to the portfolio.")

    def remove_stock(self, symbol, shares):
        if symbol in self.portfolio and self.portfolio[symbol] >= shares:
            self.portfolio[symbol] -= shares
            print(f"Removed {shares} shares of {symbol} from the portfolio.")
            if self.portfolio[symbol] == 0:
                del self.portfolio[symbol]
        else:
            print(f"Not enough shares of {symbol} to remove.")

    def get_stock_price(self, symbol):
        url = f'https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol={symbol}&interval=1min&apikey={self.api_key}'
        response = requests.get(url)
        data = response.json()

        try:
            latest_time = max(data['Time Series (1min)'])
            return float(data['Time Series (1min)'][latest_time]['1. open'])
        except KeyError:
            print("Error fetching data. Please check your API key or symbol.")
            return None

    def view_portfolio(self):
        print("\nCurrent Portfolio:")
        total_value = 0
        for symbol, shares in self.portfolio.items():
            price = self.get_stock_price(symbol)
            if price:
                value = price * shares
                total_value += value
                print(f"{symbol}: {shares} shares @ ${price:.2f} = ${value:.2f}")
        print(f"Total Portfolio Value: ${total_value:.2f}\n")


# Example usage:
api_key = 'YOUR_API_KEY'
portfolio = StockPortfolio(api_key)

portfolio.add_stock('AAPL', 10)
portfolio.add_stock('GOOGL', 5)

portfolio.view_portfolio()

portfolio.remove_stock('AAPL', 5)
portfolio.view_portfolio()